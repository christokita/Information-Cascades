geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste(Delta, " cascade size" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste(Delta, " cascade size" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
25/200
18/200
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, " italic(X[t])))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, " italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, " italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, " italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, " italic(X) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(-0.5, 0)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave("output/network_break/plots/CascadeSize_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(15, 30))) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(15, 30)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(15, 30)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave("output/network_break/plots/CascadeSize_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(16, 28)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(16, 28), breaks = seq(16, 28, 4)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(16, 28), breaks = seq(16, 28, 4)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(16, 28), breaks = seq(16, 28, 2)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave("output/network_break/plots/CascadeSize_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
scale_y_continuous(limits = c(18, 28), breaks = seq(16, 28, 2)) +
ylab(expression( paste("Cascade size, ", italic(X[t]) ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave("output/network_break/plots/CascadeSize_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
names(cascade_data)
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(gamma, active_diff_prop) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_sd, ymax = bias_mean + bias_sd),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
ggsave("output/network_break/plots/CascadeBias_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(gamma, active_diff) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(gamma, active_diff_prop) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(gamma, active_diff_prop) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation, ", italic(gamma) ))) +
theme_ctokita()
gg_diff
behav_data <- read.csv('output/network_break/data_derived/cascades/n200_fitness_allbehavior_gammasweep.csv', header = TRUE)
behav_sum <- behav_data %>%
select(-replicate) %>%
mutate(fitness = correct_message - incorrect_message ) %>%
# mutate(fitness = ifelse(fitness == Inf, 10, fitness)) %>% #need to figure out how to deal with Inf values
group_by(gamma) %>%
summarise_each(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE))) %>%
mutate(correct_message_95ci = qnorm(0.975) * correct_message_sd/sqrt(100 * 200),
incorrect_message_95ci = qnorm(0.975) * incorrect_message_sd/sqrt(100 * 200),
fitness_95ci = qnorm(0.975) * fitness_sd/sqrt(100 * 200))
gamma_zero_fitness <- behav_sum$fitness_mean[behav_sum$gamma == 0]
behav_sum <- behav_sum %>%
mutate(fitness_mean_norm = (fitness_mean - gamma_zero_fitness) / gamma_zero_fitness)
##########
# Plot
##########
# Proportion of messages received that an individual would want (i.e., greater than threshold)
gg_correct <- ggplot(data = behav_sum, aes(x = gamma, y = correct_message_mean)) +
geom_errorbar(aes(ymin = correct_message_mean - correct_message_95ci,
ymax = correct_message_mean + correct_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. correct message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_correct
# Proportion of incorrect messages received
gg_incorrect <- ggplot(data = behav_sum, aes(x = gamma, y = incorrect_message_mean)) +
geom_errorbar(aes(ymin = incorrect_message_mean - incorrect_message_95ci,
ymax = incorrect_message_mean + incorrect_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. incorrect message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_incorrect
View(behav_sum)
View(behav_data)
# Individual fitness (i.e., ratio of correct/incorrect messages received)
gg_fitness <- ggplot(data = behav_sum, aes(x = gamma, y = fitness_mean_norm)) +
# geom_errorbar(aes(ymin = fitness_mean - fitness_95ci,
#                   ymax = fitness_mean + fitness_95ci),
#               size = 0.2,
#               width = 0) +
geom_point(size = 0.8) +
geom_hline(yintercept = 0) +
ylab("Individual fitness") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_fitness
# Individual fitness (i.e., ratio of correct/incorrect messages received)
gg_fitness <- ggplot(data = behav_sum, aes(x = gamma, y = fitness_mean)) +
# geom_errorbar(aes(ymin = fitness_mean - fitness_95ci,
#                   ymax = fitness_mean + fitness_95ci),
#               size = 0.2,
#               width = 0) +
geom_point(size = 0.8) +
geom_hline(yintercept = 0) +
ylab("Individual fitness") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_fitness
##########
# Load data and summarise
##########
behav_data <- read.csv('output/network_break/data_derived/cascades/n200_fitness_allbehavior_gammasweep.csv', header = TRUE)
behav_sum <- behav_data %>%
select(-replicate) %>%
mutate(fitness = correct_message - incorrect_message ) %>%
# mutate(fitness = ifelse(fitness == Inf, 10, fitness)) %>% #need to figure out how to deal with Inf values
group_by(gamma) %>%
summarise_each(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE))) %>%
mutate(correct_message_95ci = qnorm(0.975) * correct_message_sd/sqrt(100 * 200),
incorrect_message_95ci = qnorm(0.975) * incorrect_message_sd/sqrt(100 * 200),
fitness_95ci = qnorm(0.975) * fitness_sd/sqrt(100 * 200))
gamma_zero_fitness <- behav_sum$fitness_mean[behav_sum$gamma == 0]
behav_sum <- behav_sum %>%
mutate(fitness_mean_norm = (fitness_mean - gamma_zero_fitness) / gamma_zero_fitness)
##########
# Plot
##########
# Proportion of messages received that an individual would want (i.e., greater than threshold)
gg_correct <- ggplot(data = behav_sum, aes(x = gamma, y = correct_message_mean)) +
geom_errorbar(aes(ymin = correct_message_mean - correct_message_95ci,
ymax = correct_message_mean + correct_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. correct message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_correct
ggsave(plot = gg_correct,
filename = "output/network_break/plots/MessageCorrect_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
# Proportion of incorrect messages received
gg_incorrect <- ggplot(data = behav_sum, aes(x = gamma, y = incorrect_message_mean)) +
geom_errorbar(aes(ymin = incorrect_message_mean - incorrect_message_95ci,
ymax = incorrect_message_mean + incorrect_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. incorrect message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_incorrect
ggsave(plot = gg_incorrect,
filename = "output/network_break/plots/MessageInorrect_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
View(behav_sum)
##########
# Load data and summarise
##########
behav_data <- read.csv('output/network_break/data_derived/cascades/n200_fitness_behaviorsum_gammasweep.csv', header = TRUE)
##########
# Load data and summarise
##########
behav_summed <- read.csv('output/network_break/data_derived/cascades/n200_fitness_behaviorsum_gammasweep.csv', header = TRUE)
behav_sum <- behav_summed %>%
select(-replicate) %>%
mutate(fitness = correct_message - incorrect_message ) %>%
# mutate(fitness = ifelse(fitness == Inf, 10, fitness)) %>% #need to figure out how to deal with Inf values
group_by(gamma) %>%
summarise_each(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE))) %>%
mutate(correct_message_95ci = qnorm(0.975) * correct_message_sd/sqrt(100 * 200),
incorrect_message_95ci = qnorm(0.975) * incorrect_message_sd/sqrt(100 * 200),
fitness_95ci = qnorm(0.975) * fitness_sd/sqrt(100 * 200))
gamma_zero_fitness <- behav_sum$fitness_mean[behav_sum$gamma == 0]
behav_sum <- behav_sum %>%
mutate(fitness_mean_norm = (fitness_mean - gamma_zero_fitness) / gamma_zero_fitness)
# Proportion of incorrect messages received
gg_incorrect <- ggplot(data = behav_sum, aes(x = gamma, y = incorrect_message_mean)) +
geom_errorbar(aes(ymin = incorrect_message_mean - incorrect_message_95ci,
ymax = incorrect_message_mean + incorrect_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. incorrect message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_incorrect
##########
# Plot
##########
# Proportion of messages received that an individual would want (i.e., greater than threshold)
gg_correct <- ggplot(data = behav_sum, aes(x = gamma, y = correct_message_mean)) +
geom_errorbar(aes(ymin = correct_message_mean - correct_message_95ci,
ymax = correct_message_mean + correct_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. correct message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_correct
