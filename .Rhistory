gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean)) +
geom_errorbar(aes(ymax = mean + error, ymin = mean - error),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.21),
breaks = seq(0, 2, 0.2),
expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean)) +
geom_line(size = 0.3) +
geom_errorbar(aes(ymax = mean + error, ymin = mean - error),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.21),
breaks = seq(0, 2, 0.2),
expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean, group = metric)) +
geom_line(size = 0.3) +
geom_errorbar(aes(ymax = mean + error, ymin = mean - error),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.21),
breaks = seq(0, 2, 0.2),
expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
ggsave(plot = gg_ties,
filename = "output/network_break/social_networks/tie_breaksandadds_gamma.png",
width = 85,
height = 45,
units = "mm",
dpi = 400)
ggsave(plot = gg_ties,
filename = "output/network_break/social_networks/tie_breaksandadds_gamma.png",
width = 90,
height = 45,
units = "mm",
dpi = 400)
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean, group = metric)) +
geom_line(size = 0.3) +
geom_errorbar(aes(ymax = mean + sd, ymin = mean - sd),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.21),
breaks = seq(0, 2, 0.2),
expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean, group = metric)) +
geom_line(size = 0.3) +
geom_errorbar(aes(ymax = mean + sd, ymin = mean - sd),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
# scale_y_continuous(limits = c(0, 1.21),
#                    breaks = seq(0, 2, 0.2),
#                    expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean, group = metric)) +
geom_line(size = 0.3) +
geom_errorbar(aes(ymax = mean + error, ymin = mean - error),
size = 0.3,
width = 0) +
geom_point(aes(shape = metric, fill = metric),
size = 0.8) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.21),
breaks = seq(0, 2, 0.2),
expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
##########
# Load data and summarise
##########
assort_data <- read.csv('data_derived/network_break/social_networks/n200_assortativity_gammasweep.csv', header = TRUE)
assort_sum <- assort_data %>%
mutate(delta_assort = assort_final - assort_initial) %>%
group_by(gamma) %>%
summarise(assort_mean = mean(assort_final),
assort_sd = sd(assort_final),
assort_95error = qnorm(0.975)*sd(assort_final)/sqrt(length(assort_final)),
assortchange_mean = mean(delta_assort),
assortchange_sd = sd(delta_assort),
assortchange_95error = qnorm(0.975)*sd(delta_assort)/sqrt(length(delta_assort)))
##########
# Plot
##########
# Raw final assortativity values
gg_assort <- ggplot(data = assort_sum, aes(x = gamma, y = assort_mean)) +
geom_hline(aes(yintercept = 0),
size = 0.3,
linetype = "dotted") +
geom_ribbon(aes(ymin = assort_mean - assort_95error, ymax = assort_mean + assort_95error),
alpha = 0.4,
fill = "#525252") +
geom_line(color = "#000000",
size = 0.3) +
geom_point(color = "#000000",
size = 0.8) +
ylab(expression( paste("Assortativity ", italic(r[global])) )) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_assort
ggsave(plot = gg_assort, filename = "output/network_break/social_networks/SocialNet_assortativity_gamma.png", width = 45, height = 45, units = "mm", dpi = 400)
# Change in assortativity
gg_assortchange <- ggplot(data = assort_sum, aes(x = gamma, y = assortchange_mean)) +
geom_hline(aes(yintercept = 0),
size = 0.3,
linetype = "dotted") +
# geom_errorbar(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
#               size = 0.3,
#               width = 0) +
geom_ribbon(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
alpha = 0.4,
fill = "#525252") +
geom_line(color = "#000000",
size = 0.3) +
geom_point(color = "#000000",
size = 0.8) +
ylab(expression( paste("Change in assortativity ", italic(r[global])) )) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_assortchange
ggsave(plot = gg_assortchange,
filename = "output/network_break/social_networks/assortchange_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
# Change in assortativity
gg_assortchange <- ggplot(data = assort_sum, aes(x = gamma, y = assortchange_mean)) +
geom_hline(aes(yintercept = 0),
size = 0.3,
linetype = "dotted") +
# geom_errorbar(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
#               size = 0.3,
#               width = 0) +
geom_ribbon(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
alpha = 0.4,
fill = "#525252") +
geom_line(color = "#000000",
size = 0.3) +
geom_point(color = "#000000",
size = 0.8) +
ylab(expression( paste(Delta, "assortativity ", italic(r[global])) )) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_assortchange
# Change in assortativity
gg_assortchange <- ggplot(data = assort_sum, aes(x = gamma, y = assortchange_mean)) +
geom_hline(aes(yintercept = 0),
size = 0.3,
linetype = "dotted") +
# geom_errorbar(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
#               size = 0.3,
#               width = 0) +
geom_ribbon(aes(ymin = assortchange_mean - assortchange_95error, ymax = assortchange_mean + assortchange_95error),
alpha = 0.4,
fill = "#525252") +
geom_line(color = "#000000",
size = 0.3) +
geom_point(color = "#000000",
size = 0.8) +
ylab(expression( paste(Delta, " assortativity ", italic(r[global])) )) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_assortchange
ggsave(plot = gg_assortchange,
filename = "output/network_break/social_networks/assortchange_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
gg_assort
ggsave(plot = gg_assort,
filename = "output/network_break/social_networks/SocialNet_assortativity_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
ggsave(plot = gg_assort,
filename = "output/network_break/social_networks/assortativity_gamma.png",
width = 45,
height = 45,
units = "mm",
dpi = 400)
##########
# Load packages
##########
library(ggplot2)
library(tidyr)
library(dplyr)
library(RColorBrewer)
library(scales)
library(ggpubr)
####################
# Paramters for analysis
####################
data_path <- 'data_derived/network_break/cascades/n200_cascadestats_gammasweep.csv' #path to data
out_path <- "output/network_break/cascades/" #directory you wish to save plots
plot_tag <- "gamma" #extra info to add onto end of plot name
if (plot_tag != "") {
plot_tag <- paste0("_", plot_tag)
}
theme_classic() +
theme(axis.text       = element_text(size = 6, color = "black"),
axis.title      = element_text(size = 7, color = "black"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3),
legend.title    = element_text(size = 7, face = "bold", vjust = -1),
legend.text     = element_text(size = 6, color = "black"),
strip.text      = element_text(size = 7, color = "black"),
legend.key.size = unit(3, "mm"))
####################
# My preferred theme
####################
theme_ctokita <- function() {
theme_classic() +
theme(axis.text       = element_text(size = 6, color = "black"),
axis.title      = element_text(size = 7, color = "black"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3),
legend.title    = element_text(size = 7, face = "bold", vjust = -1),
legend.text     = element_text(size = 6, color = "black"),
strip.text      = element_text(size = 7, color = "black"),
legend.key.size = unit(3, "mm"))
}
##########
# Load data
##########
# Read in data
cascade_data <- read.csv(data_path, header = TRUE)
##########
# Plot: Cascade size
##########
# Summarise by gamma
cascade_size <- cascade_data %>%
select(gamma, total_active) %>%
group_by(gamma) %>%
summarise_each(list(size_mean = mean,
size_sd = sd,
rep_count = length)) %>%
mutate(size_95ci = qnorm(0.975) * size_sd / sqrt(rep_count))
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0.0, 28), breaks = seq(16, 28, 2)) +
ylab(expression( paste("Cascade size ", italic(X) ))) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean)) +
# Plot all data
geom_errorbar(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0.0, 28), breaks = seq(16, 28, 2)) +
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave(paste0(out_path, "CascadeSize", plot_tag ,".png"), width = 45, height = 45, units = "mm", dpi = 400)
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(gamma, active_diff_prop) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean)) +
# Plot all data
geom_errorbar(aes(ymin = bias_mean - bias_95ci, ymax = bias_mean + bias_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_diff
ggsave(paste0(out_path, "CascadeBias", plot_tag,".png"), width = 45, height = 45, units = "mm", dpi = 400)
data_path <- "data_derived/network_break/fitness/n200_fitness_allbehavior_gammasweep.csv" #path to data
out_path <- "output/network_break/fitness/" #directory you wish to save plots
plot_tag <- "gamma" #extra info to add onto end of plot name
if (plot_tag != "") {
plot_tag <- paste0("_", plot_tag)
}
####################
# My preferred theme
####################
theme_ctokita <- function() {
theme_classic() +
theme(axis.text       = element_text(size = 6, color = "black"),
axis.title      = element_text(size = 7, color = "black"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3),
legend.title    = element_text(size = 7, face = "bold", vjust = -1),
legend.text     = element_text(size = 6, color = "black"),
strip.text      = element_text(size = 7, color = "black"),
legend.key.size = unit(3, "mm"))
}
##########
# Load data and summarise
##########
behav_data <- read.csv(data_path, header = TRUE)
behav_sum <- behav_data %>%
select(-replicate) %>%
mutate(fitness = correct_message - incorrect_message ) %>%
# mutate(fitness = ifelse(fitness == Inf, 10, fitness)) %>% #need to figure out how to deal with Inf values
group_by(gamma) %>%
summarise_each(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE))) %>%
mutate(correct_message_95ci = qnorm(0.975) * correct_message_sd/sqrt(100 * 200),
incorrect_message_95ci = qnorm(0.975) * incorrect_message_sd/sqrt(100 * 200),
fitness_95ci = qnorm(0.975) * fitness_sd/sqrt(100 * 200))
gamma_zero_fitness <- behav_sum$fitness_mean[behav_sum$gamma == 0]
behav_sum <- behav_sum %>%
mutate(fitness_mean_norm = (fitness_mean - gamma_zero_fitness) / gamma_zero_fitness)
##########
# Plot
##########
# Proportion of messages received that an individual would want (i.e., greater than threshold)
gg_correct <- ggplot(data = behav_sum, aes(x = gamma, y = correct_message_mean)) +
geom_errorbar(aes(ymin = correct_message_mean - correct_message_95ci,
ymax = correct_message_mean + correct_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. correct message received") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_correct
##########
# Plot
##########
# Proportion of messages received that an individual would want (i.e., greater than threshold)
gg_correct <- ggplot(data = behav_sum, aes(x = gamma, y = correct_message_mean)) +
geom_errorbar(aes(ymin = correct_message_mean - correct_message_95ci,
ymax = correct_message_mean + correct_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. correct message received") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_correct
ggsave(plot = gg_correct,
filename = paste0(out_path, "MessageCorrect", plot_tag, ".png"),
width = 45,
height = 45,
units = "mm",
dpi = 400)
# Proportion of incorrect messages received
gg_incorrect <- ggplot(data = behav_sum, aes(x = gamma, y = incorrect_message_mean)) +
geom_errorbar(aes(ymin = incorrect_message_mean - incorrect_message_95ci,
ymax = incorrect_message_mean + incorrect_message_95ci),
size = 0.2,
width = 0) +
geom_point(size = 0.8) +
ylab("Freq. incorrect message received") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
theme_ctokita()
gg_incorrect
ggsave(plot = gg_incorrect,
filename = paste0(out_path, "MessageInorrect", plot_tag, ".png"),
width = 45,
height = 45,
units = "mm",
dpi = 400)
# Individual fitness (i.e., ratio of correct/incorrect messages received)
gg_fitness <- ggplot(data = behav_sum, aes(x = gamma, y = fitness_mean)) +
# geom_errorbar(aes(ymin = fitness_mean - fitness_95ci,
#                   ymax = fitness_mean + fitness_95ci),
#               size = 0.2,
#               width = 0) +
geom_point(size = 0.8) +
geom_hline(yintercept = 0) +
ylab("Individual fitness") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_fitness
# Individual fitness (i.e., ratio of correct/incorrect messages received)
gg_fitness <- ggplot(data = behav_sum, aes(x = gamma, y = fitness_mean)) +
# geom_errorbar(aes(ymin = fitness_mean - fitness_95ci,
#                   ymax = fitness_mean + fitness_95ci),
#               size = 0.2,
#               width = 0) +
geom_point(size = 0.8) +
geom_hline(yintercept = 0,
size = 0.3,
linetype = "dotted") +
ylab("Individual fitness") +
xlab(expression( paste("Information correlation, ", italic(gamma)) )) +
theme_ctokita()
gg_fitness
