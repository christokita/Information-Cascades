geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
##########
# Plot: Cascade size
##########
# Summarise by gamma
cascade_size <- cascade_data %>%
select(run_time, gamma, total_active) %>%
mutate(total_active = log10(total_active)) %>%
group_by(run_time, gamma) %>%
summarise_each(list(size_mean = mean,
size_sd = sd,
rep_count = length)) %>%
mutate(size_95ci = qnorm(0.975) * size_sd / sqrt(rep_count))
# Plot
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
##########
# Plot: Cascade bias
##########
# Summarise by gamma
cascade_diff <- cascade_data %>%
select(run_time, gamma, active_diff_prop) %>%
group_by(run_time, gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = bias_mean - bias_95ci,
ymax = bias_mean + bias_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_diff
# Plot
pal <- c("#225ea8", "#41b6c4", "#a1dab4")
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
scale_color_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
scale_fill_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = bias_mean - bias_95ci,
ymax = bias_mean + bias_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
scale_color_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
scale_fill_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_diff
##########
# Plot: Cascade size
##########
# Summarise by gamma
cascade_size <- cascade_data %>%
select(run_time, gamma, total_active) %>%
group_by(run_time, gamma) %>%
summarise_each(list(size_mean = mean,
size_sd = sd,
rep_count = length)) %>%
mutate(size_95ci = qnorm(0.975) * size_sd / sqrt(rep_count))
# Plot
pal <- c("#225ea8", "#41b6c4", "#a1dab4")
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
scale_color_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
scale_fill_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita()
gg_size
ggsave(plot = gg_size,
filename = "output/network_break/suppl_analysis/CasacadeSize_simlength.png",
width = 70,
height = 45,
units = "mm",
dpi = 400)
gg_size <- ggplot(cascade_size, aes(x = gamma, y = size_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
scale_color_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
scale_fill_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
ylab("Cascade size") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_size
ggsave(plot = gg_size,
filename = "output/network_break/suppl_analysis/CasacadeSize_simlength.png",
width = 70,
height = 45,
units = "mm",
dpi = 400)
ggsave(plot = gg_size,
filename = "output/network_break/suppl_analysis/CasacadeSize_simlength.png",
width = 65,
height = 45,
units = "mm",
dpi = 400)
# Summarizing plot
gg_diff <- ggplot(cascade_diff, aes(x = gamma, y = bias_mean, color = run_time)) +
# Plot all data
geom_ribbon(aes(ymin = bias_mean - bias_95ci,
ymax = bias_mean + bias_95ci,
fill = run_time),
alpha = 0.4,
color = NA) +
geom_line(size = 0.3) +
geom_point(size = 0.8) +
# General plotting controls
# scale_y_continuous(limits = c(0, 0.16)) +
scale_color_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
scale_fill_manual(name = "Simulation\nsteps",
values = pal,
labels = c(expression(10^5),
expression(10^6))) +
ylab(expression( paste("Cascade bias" ))) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_diff
ggsave(plot = gg_diff,
filename = "output/network_break/suppl_analysis/CasacadeBias_simlength.png",
width = 65,
height = 45,
units = "mm",
dpi = 400)
##########
# Load packages
##########
library(ggplot2)
library(dplyr)
library(tidyr)
####################
# My preferred theme
####################
theme_ctokita <- function() {
theme_classic() +
theme(axis.text       = element_text(size = 6, color = "black"),
axis.title      = element_text(size = 7, color = "black"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3),
legend.title    = element_text(size = 7, face = "bold", vjust = -1),
legend.text     = element_text(size = 6, color = "black"),
strip.text      = element_text(size = 7, color = "black"),
legend.key.size = unit(3, "mm"))
}
############## Assortatiity ##############
##########
# Load data and summarise
##########
assort_data <- read.csv('data_derived/network_break/social_networks/n200_assortativity_gammasweep.csv', header = TRUE)
assort_sum <- assort_data %>%
mutate(delta_assort = assort_final - assort_initial) %>%
group_by(gamma) %>%
summarise(assort_mean = mean(assort_final),
assort_sd = sd(assort_final),
assort_95error = qnorm(0.975)*sd(assort_final)/sqrt(length(assort_final)),
assortchange_mean = mean(delta_assort),
assortchange_sd = sd(delta_assort),
assortchange_95error = qnorm(0.975)*sd(delta_assort)/sqrt(length(delta_assort)))
##########
# Load data and summarise
##########
network_files <- list.files("data_derived/network_break/social_networks/network_change/", full.names = TRUE)
network_change_data <- lapply(network_files, function(x) {
# Read in file
run_file <- read.csv(x)
#Summarize
run_data <- run_file %>%
mutate(net_same = same_type_adds - same_type_breaks,
net_diff = diff_type_adds - diff_type_breaks,
net_out_degree = out_degree - out_degree_initial,
net_in_degree = in_degree - in_degree_initial) %>%
select(-replicate, -individual) %>%
gather(metric, value, -gamma) %>%
group_by(gamma, metric) %>%
summarise(mean = mean(value),
sd = sd(value),
error = qnorm(0.975)*sd(value)/sqrt(length(value)))
return(run_data)
})
network_change_data <- do.call("rbind", network_change_data)
##########
# Plot
##########
# Change in connections by type
net_type_data <- network_change_data %>%
filter(metric %in% c("net_same", "net_diff")) %>%
mutate(metric = factor(metric, levels = c("net_same", "net_diff")))
gg_type_change <- ggplot(net_type_data, aes(x = gamma, y = mean, group = metric)) +
geom_hline(yintercept = 0,
size = 0.3,
linetype = "dotted") +
geom_ribbon(aes(ymax = mean + error, ymin = mean - error),
alpha = 0.4) +
geom_line(size = 0.3) +
geom_point(aes(shape = metric, fill = metric),
size = 1) +
ylab(expression( paste(Delta, " social ties")) ) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_shape_manual(values = c(19, 21),
labels = c("Same ideology",
"Diff. ideology"),
name = "Connetion type") +
scale_fill_manual(values = c("black", "white"),
labels = c("Same ideology",
"Diff. ideology"),
name = "Connetion type") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_type_change
ggsave(plot = gg_type_change,
filename = "output/network_break/social_networks/tiechange_gamma.svg",
width = 75,
height = 45,
units = "mm")
# Breaks/new ties by gamma
ties_data <- network_change_data %>%
filter(metric %in% c("diff_type_adds", "diff_type_breaks", "same_type_adds", "same_type_breaks")) %>%
mutate(metric = factor(metric, levels = c("same_type_adds", "same_type_breaks", "diff_type_adds", "diff_type_breaks")))
gg_ties <- ggplot(ties_data, aes(x = gamma, y = mean, group = metric)) +
geom_line(size = 0.3) +
geom_ribbon(aes(ymax = mean + error, ymin = mean - error),
alpha = 0.4) +
geom_point(aes(shape = metric, fill = metric),
size = 1) +
ylab("Count") +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
# scale_y_continuous(limits = c(0, 1.21),
#                    breaks = seq(0, 2, 0.2),
#                    expand = c(0, 0)) +
scale_shape_manual(values = c(19, 17, 21, 24),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
scale_fill_manual(values = c("black", "black", "white", "white"),
labels = c("New tie, same ideology",
"Broken tie, same ideology",
"New tie, diff. ideology",
"Broken tie, diff. ideology"),
name = "") +
theme_ctokita() +
theme(aspect.ratio = 1)
gg_ties
ggsave(plot = gg_ties,
filename = "output/network_break/social_networks/tie_breaksandadds_gamma.svg",
width = 90,
height = 45,
units = "mm")
# Change in degree
net_degree_data <- network_change_data %>%
filter(metric %in% c("net_out_degree"))
gg_degree_change <- ggplot(net_degree_data, aes(x = gamma, y = mean)) +
geom_ribbon(aes(ymax = mean + error, ymin = mean - error),
alpha = 0.4) +
geom_line(size = 0.3) +
geom_point(aes(fill = metric),
size = 0.8) +
ylab(expression( paste(Delta, " out-degree"))) +
xlab(expression( paste("Information correlation ", italic(gamma)) )) +
scale_y_continuous(limits = c(0, 1.5),
expand = c(0, 0)) +
theme_ctokita() +
theme(aspect.ratio = 1,
legend.position = "none")
gg_degree_change
ggsave(plot = gg_degree_change,
filename = "output/network_break/social_networks/outdegreechange_gamma.svg",
width = 45,
height = 45,
units = "mm")
source('~/Documents/Research/Tarnita Lab/Information Cascades/information-cascades/scripts/plot_cascades.R', echo=TRUE)
##############################
#
# PLOT: Compare threshold-adjusting model outputs for fitness anc cascades
#
##############################
##########
# Load packages
##########
library(ggplot2)
library(dplyr)
##########
# Plot parameters
##########
# Plot out
out_path <- "output/thresh_adjust/"
# Plot variables
dodge_width = 0.05
pal <- c("#e66101", "#bababa", "#5e3c99")
labs <- c(expression(paste("Care more about being right")),
expression(paste("Care equally")),
expression(paste("Care more about being wrong")))
key_name <- "Threshold\ndynamics"
####################
# Load and process data
####################
# Cascade data
cascade_files <- list.files("data_derived/thresh_adjust/cascades/", full.names = TRUE)
cascade_data <- lapply(cascade_files, function(file) {
run_data <-  read.csv(file, header = TRUE)
parameters <- gsub(".*_([a-z]+)\\.csv", "\\1", file, perl = TRUE)
run_sum <- run_data %>%
select(gamma, total_active) %>%
group_by(gamma) %>%
summarise_each(list(size_mean = mean,
size_sd = sd,
rep_count = length)) %>%
mutate(size_95ci = qnorm(0.975) * size_sd / sqrt(rep_count),
run = parameters)
cascade_diff <- run_data %>%
select(gamma, active_diff_prop) %>%
group_by(gamma) %>%
summarise_each(list(bias_mean = mean,
bias_sd = sd,
rep_count = length)) %>%
mutate(bias_95ci = qnorm(0.975) * bias_sd / sqrt(rep_count))
run_sum <- merge(run_sum, cascade_diff)
return(run_sum)
})
cascade_data <- do.call('rbind', cascade_data)
cascade_data$run <- factor(cascade_data$run, levels = c("muchlargerphi", "equal", "muchlargeromega"))
# Fitness data
fitness_files <- list.files("data_derived/thresh_adjust/fitness/", pattern = ".*allbehavior.*",  full.names = TRUE)
fitness_data <- lapply(fitness_files, function(file) {
run_data <-  read.csv(file, header = TRUE)
parameters <- gsub(".*_([a-z]+)\\.csv", "\\1", file, perl = TRUE)
run_data$run <- parameters
run_sum <- run_data %>%
select(-replicate) %>%
mutate(fitness = sensitivity + specificity + precision) %>%
gather(metric, value, -gamma, -threshold, -run) %>%
group_by(run, gamma, metric) %>%
summarise(mean = mean(value, na.rm = TRUE),
sd = sd(value, na.rm = TRUE),
ci95 = qnorm(0.975) * sd(value, na.rm = TRUE) / sqrt( sum(!is.na(value)) )) #denominator removes NA values from count
return(run_sum)
})
fitness_data <- do.call('rbind', fitness_data)
fitness_data$run <- factor(fitness_data$run, levels = c("muchlargerphi", "equal", "muchlargeromega"))
####################
# My preferred theme
####################
theme_ctokita <- function() {
theme_classic() +
theme(axis.text       = element_text(size = 6, color = "black"),
axis.title      = element_text(size = 7, color = "black"),
axis.ticks = element_line(size = 0.3, color = "black"),
axis.line = element_line(size = 0.3),
legend.title    = element_text(size = 7, face = "bold", vjust = -1),
legend.text     = element_text(size = 6, color = "black"),
strip.text      = element_text(size = 7, color = "black"),
legend.key.size = unit(3, "mm"),
legend.text.align = 0,
aspect.ratio = 1)
}
########## Cascades #########
##########
# Plot: Cascade size
##########
gg_size <- ggplot(cascade_data, aes(x = gamma, y = size_mean, color = run)) +
geom_ribbon(aes(ymin = size_mean - size_95ci,
ymax = size_mean + size_95ci,
fill = run),
alpha = 0.4,
color = NA,
position = position_dodge(width = dodge_width)) +
geom_line(size = 0.3,
position = position_dodge(width = dodge_width)) +
geom_point(size = 0.8,
position = position_dodge(width = dodge_width)) +
ylab("Cascade size ") +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
scale_color_manual(values = pal,
label = labs,
name = key_name) +
scale_fill_manual(values = pal,
label = labs,
name = key_name) +
theme_ctokita() +
theme(legend.text.align = 0)
gg_size
ggsave(plot = gg_size, filename = paste0(out_path, "cascades/Comparison_CascadeSize.png"), width = 90, height = 45, units = "mm", dpi = 600)
ggsave(plot = gg_size, filename = paste0(out_path, "cascades/Comparison_CascadeSize.svg"), width = 90, height = 45, units = "mm")
##########
# Plot: Cascade bias
##########
gg_bias <- ggplot(cascade_data, aes(x = gamma, y = bias_mean, color = run)) +
geom_ribbon(aes(ymin = bias_mean - bias_95ci,
ymax = bias_mean + bias_95ci,
fill = run),
alpha = 0.4,
color = NA,
position = position_dodge(width = dodge_width)) +
geom_line(size = 0.3,
position = position_dodge(width = dodge_width)) +
geom_point(size = 0.8,
position = position_dodge(width = dodge_width)) +
ylab(expression( "Cascade bias" )) +
xlab(expression(paste("Information correlation ", italic(gamma) ))) +
scale_color_manual(values = pal,
label = labs,
name = key_name) +
scale_fill_manual(values = pal,
label = labs,
name = key_name) +
theme_ctokita() +
theme(legend.text.align = 0)
gg_bias
ggsave(plot = gg_bias, filename = paste0(out_path, "cascades/Comparison_CascadeBias.png"), width = 90, height = 45, units = "mm", dpi = 600)
ggsave(plot = gg_bias, filename = paste0(out_path, "cascades/Comparison_CascadeBias.svg"), width = 90, height = 45, units = "mm")
source('~/Documents/Research/Tarnita Lab/Information Cascades/information-cascades/scripts/suppl_analysis/plot_threshadjust_fitnesscascade.R', echo=TRUE)
source('~/Documents/Research/Tarnita Lab/Information Cascades/information-cascades/scripts/suppl_analysis/plot_threshadjust_fitnesscascade.R', echo=TRUE)
library(ggplot2)
source('~/Documents/Research/Tarnita Lab/Information Cascades/information-cascades/scripts/plot_cascades.R', echo=TRUE)
